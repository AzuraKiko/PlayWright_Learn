# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Login Functionality >> should show error message with invalid credentials
- Location: E:\Playwright\tests\login\Login.spec.js:35:5

# Error details

```
Error: expect(received).toBeTruthy()

Received: false
    at E:\Playwright\tests\login\Login.spec.js:42:155
```

# Page snapshot

```yaml
- main:
  - heading "Trade for Good" [level=3]
  - paragraph: Financial Companies Empowered Through Technology
  - button "Read more":
    - link "Read more"
  - img "global"
  - text: Powered by
  - img "provider"
  - button "Language":
    - img "language_flag"
  - button "Theme"
  - heading "Hello!" [level=5]
  - paragraph: Please login to your account
  - text: Email
  - textbox "Email": minh.tfg@novus-fintech.com
  - text: Password
  - textbox "Password": invalid123
  - button "toggle password visibility"
  - paragraph
  - button "300s" [disabled]
  - paragraph:
    - text: For any questions, reach out to us at
    - link "hello@equix.app"
    - text: anytime!
- alert:
  - paragraph: Error
  - paragraph: You have tried too many times. Please try again later.
  - button "Dismiss"
```

# Test source

```ts
   1 | import { test, expect } from '../../lib/core/BaseTest';
   2 | import { TestData } from '../../lib/constants/TestData';
   3 | import PageFactory from '../../lib/pages/PageFactory';
   4 |
   5 |
   6 | test('Check title of Trade for Good', async ({ baseTest }) => {
   7 |     const { page } = baseTest;  // Lấy page từ baseTest
   8 |
   9 |     // Kiểm tra tiêu đề trang
  10 |     await expect(page).toHaveTitle(/Trade For Good Admin Portal/);
  11 | });
  12 |
  13 | test.describe('Login Functionality', () => {
  14 |     let loginPage;
  15 |     let pageFactory;
  16 |
  17 |     test.beforeEach(async ({ page }) => {
  18 |         pageFactory = new PageFactory(page);
  19 |         // Lấy LoginPage từ PageFactory
  20 |         loginPage = pageFactory.getLoginPage();
  21 |         await loginPage.open('https://portal-tradeforgood-dev2.equix.app');
  22 |     });
  23 |
  24 |     test('should login successfully with valid credentials', async ({ page }) => {
  25 |         await loginPage.login(TestData.Users.ValidUser.email, TestData.Users.ValidUser.password);
  26 |
  27 |         // Kiểm tra đã chuyển hướng đến trang nhập PIN
  28 |         await expect(page.locator('body')).toContainText('Enter Pin Code');
  29 |
  30 |         await loginPage.enterCode(TestData.Users.ValidUser.code);
  31 |
  32 |         await expect(page.locator('body')).toContainText('Dashboard');
  33 |     });
  34 |
  35 |     test('should show error message with invalid credentials', async ({ page }) => {
  36 |         await loginPage.login(TestData.Users.InvalidUser.email, TestData.Users.InvalidUser.password);
  37 |
  38 |         // Kiểm tra toast thông báo lỗi hiển thị
  39 |         expect(await loginPage.isToastDisplayed()).toBeTruthy();
  40 |
  41 |         // Kiểm tra nội dung của toast message
> 42 |         expect(await loginPage.isToastMessageCorrect('Error, Incorrect Password or User Login. Please make sure your details are correct and try again')).toBeTruthy();
     |                                                                                                                                                           ^ Error: expect(received).toBeTruthy()
  43 |
  44 |         await loginPage.dismissToast();
  45 |         // Kiểm tra nội dung toast message đã bị xóa
  46 |         expect(await loginPage.isToastDisplayed()).toBeFalsy();
  47 |     });
  48 |
  49 | });
  50 |
  51 |
  52 | //     test('Đăng nhập thất bại khi không nhập tên đăng nhập', async ({ baseTest }) => {
  53 |
  54 | //         // Lấy LoginPage từ PageFactory
  55 | //         const loginPage = pageFactory.getPage('login');
  56 |
  57 | //         // Đăng nhập với tên đăng nhập trống
  58 | //         await loginPage.login('', TestData.Users.StandardUser.password);
  59 |
  60 | //         // Kiểm tra thông báo lỗi hiển thị
  61 | //         expect(await loginPage.isErrorMessageVisible()).toBeTruthy();
  62 |
  63 | //         // Kiểm tra nội dung thông báo lỗi
  64 | //         const errorMessage = await loginPage.getErrorMessage();
  65 | //         expect(errorMessage).toContain(TestData.ErrorMessages.EmptyUsername);
  66 | //     });
  67 |
  68 | //     test('Đăng nhập thất bại khi không nhập mật khẩu', async ({ baseTest }) => {
  69 | //         const { pageFactory } = baseTest;
  70 |
  71 | //         // Lấy LoginPage từ PageFactory
  72 | //         const loginPage = pageFactory.getPage('login');
  73 |
  74 | //         // Đăng nhập với mật khẩu trống
  75 | //         await loginPage.login(TestData.Users.StandardUser.username, '');
  76 |
  77 | //         // Kiểm tra thông báo lỗi hiển thị
  78 | //         expect(await loginPage.isErrorMessageVisible()).toBeTruthy();
  79 |
  80 | //         // Kiểm tra nội dung thông báo lỗi
  81 | //         const errorMessage = await loginPage.getErrorMessage();
  82 | //         expect(errorMessage).toContain(TestData.ErrorMessages.EmptyPassword);
  83 | //     });
  84 |
```