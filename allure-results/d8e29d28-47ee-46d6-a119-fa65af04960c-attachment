# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Login Functionality >> should login successfully with valid credentials
- Location: E:\Playwright\tests\login\Login.spec.js:29:5

# Error details

```
Error: browserType.launch: Target page, context or browser has been closed
Browser logs:

<launching> C:\Users\Admin\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.exe --disable-field-trial-config --disable-background-networking --disable-background-timer-throttling --disable-backgrounding-occluded-windows --disable-back-forward-cache --disable-breakpad --disable-client-side-phishing-detection --disable-component-extensions-with-background-pages --disable-component-update --no-default-browser-check --disable-default-apps --disable-dev-shm-usage --disable-extensions --disable-features=AcceptCHFrame,AutoExpandDetailsElement,AvoidUnnecessaryBeforeUnloadCheckSync,CertificateTransparencyComponentUpdater,DeferRendererTasksAfterInput,DestroyProfileOnBrowserClose,DialMediaRouteProvider,ExtensionManifestV2Disabled,GlobalMediaControls,HttpsUpgrades,ImprovedCookieControls,LazyFrameLoading,LensOverlay,MediaRouter,PaintHolding,ThirdPartyStoragePartitioning,Translate --allow-pre-commit-input --disable-hang-monitor --disable-ipc-flooding-protection --disable-popup-blocking --disable-prompt-on-repost --disable-renderer-backgrounding --force-color-profile=srgb --metrics-recording-only --no-first-run --enable-automation --password-store=basic --use-mock-keychain --no-service-autorun --export-tagged-pdf --disable-search-engine-choice-screen --unsafely-disable-devtools-self-xss-warnings --no-sandbox --start-maximized --user-data-dir=C:\Users\Admin\AppData\Local\Temp\playwright_chromiumdev_profile-UZHSa6 --remote-debugging-pipe --no-startup-window
<launched> pid=936
[pid=936][err] [0331/022822.122:ERROR:main_dll_loader_win.cc(138)] Failed to load Chrome DLL from C:\Users\Admin\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.dll: The paging file is too small for this operation to complete. (0x5AF)
Call log:
  - <launching> C:\Users\Admin\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.exe --disable-field-trial-config --disable-background-networking --disable-background-timer-throttling --disable-backgrounding-occluded-windows --disable-back-forward-cache --disable-breakpad --disable-client-side-phishing-detection --disable-component-extensions-with-background-pages --disable-component-update --no-default-browser-check --disable-default-apps --disable-dev-shm-usage --disable-extensions --disable-features=AcceptCHFrame,AutoExpandDetailsElement,AvoidUnnecessaryBeforeUnloadCheckSync,CertificateTransparencyComponentUpdater,DeferRendererTasksAfterInput,DestroyProfileOnBrowserClose,DialMediaRouteProvider,ExtensionManifestV2Disabled,GlobalMediaControls,HttpsUpgrades,ImprovedCookieControls,LazyFrameLoading,LensOverlay,MediaRouter,PaintHolding,ThirdPartyStoragePartitioning,Translate --allow-pre-commit-input --disable-hang-monitor --disable-ipc-flooding-protection --disable-popup-blocking --disable-prompt-on-repost --disable-renderer-backgrounding --force-color-profile=srgb --metrics-recording-only --no-first-run --enable-automation --password-store=basic --use-mock-keychain --no-service-autorun --export-tagged-pdf --disable-search-engine-choice-screen --unsafely-disable-devtools-self-xss-warnings --no-sandbox --start-maximized --user-data-dir=C:\Users\Admin\AppData\Local\Temp\playwright_chromiumdev_profile-UZHSa6 --remote-debugging-pipe --no-startup-window
  - <launched> pid=936
  - [pid=936][err] [0331/022822.122:ERROR:main_dll_loader_win.cc(138)] Failed to load Chrome DLL from C:\Users\Admin\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.dll: The paging file is too small for this operation to complete. (0x5AF)

```

# Test source

```ts
   1 | import { test, expect } from '../../lib/core/BaseTest';
   2 | import { TestData } from '../../lib/constants/TestData';
   3 | import PageFactory from '../../lib/pages/PageFactory';
   4 | import { BrowserHelper } from '../../lib/utils/Index';
   5 |
   6 |
   7 | test('Check title of Trade for Good', async ({ baseTest }) => {
   8 |     const { page } = baseTest;  // Lấy page từ baseTest
   9 |
  10 |     // Lấy BrowserHelper
  11 |     const browserHelper = new BrowserHelper(page);
  12 |     // Lấy tiêu đề trang
  13 |     const actualTitle = () => browserHelper.getTitle();
  14 |     // Kiểm tra tiêu đề trang
  15 |     await expect(actualTitle).toHaveTitle(/Trade For Good Admin Portal/);
  16 | });
  17 |
  18 | test.describe('Login Functionality', () => {
  19 |     let loginPage;
  20 |     let pageFactory;
  21 |
  22 |     test.beforeEach(async ({ page }) => {
  23 |         pageFactory = new PageFactory(page);
  24 |         // Lấy LoginPage từ PageFactory
  25 |         loginPage = pageFactory.getLoginPage();
  26 |         await loginPage.open('https://portal-tradeforgood-dev2.equix.app/');
  27 |     });
  28 |
> 29 |     test('should login successfully with valid credentials', async ({ page }) => {
     |     ^ Error: browserType.launch: Target page, context or browser has been closed
  30 |         await loginPage.login(TestData.Users.ValidUser.email, TestData.Users.ValidUser.password);
  31 |
  32 |         // Kiểm tra đã chuyển hướng đến trang nhập PIN
  33 |         expect(page.bodyText()).toContain('Enter Pin Code');
  34 |
  35 |         await loginPage.enterCode(TestData.Users.ValidUser.code);
  36 |
  37 |         expect(page.bodyText()).toContain('dashboard');
  38 |     });
  39 |
  40 |     test('should show error message with invalid credentials', async ({ page }) => {
  41 |         await loginPage.login(TestData.Users.InvalidUser.email, TestData.Users.InvalidUser.password);
  42 |
  43 |         // Kiểm tra toast thông báo lỗi hiển thị
  44 |         expect(await loginPage.isToastDisplayed()).toBeTruthy();
  45 |
  46 |         // Kiểm tra nội dung của toast message
  47 |         expect(await loginPage.isToastMessageCorrect('Error, Incorrect Password or User Login. Please make sure your details are correct and try again')).toBeTruthy();
  48 |
  49 |         await loginPage.dismissToast();
  50 |         // Kiểm tra nội dung toast message đã bị xóa
  51 |         expect(await loginPage.isToastDisplayed()).toBeFalsy();
  52 |     });
  53 |
  54 | });
  55 |
  56 |
  57 | //     test('Đăng nhập thất bại khi không nhập tên đăng nhập', async ({ baseTest }) => {
  58 |
  59 | //         // Lấy LoginPage từ PageFactory
  60 | //         const loginPage = pageFactory.getPage('login');
  61 |
  62 | //         // Đăng nhập với tên đăng nhập trống
  63 | //         await loginPage.login('', TestData.Users.StandardUser.password);
  64 |
  65 | //         // Kiểm tra thông báo lỗi hiển thị
  66 | //         expect(await loginPage.isErrorMessageVisible()).toBeTruthy();
  67 |
  68 | //         // Kiểm tra nội dung thông báo lỗi
  69 | //         const errorMessage = await loginPage.getErrorMessage();
  70 | //         expect(errorMessage).toContain(TestData.ErrorMessages.EmptyUsername);
  71 | //     });
  72 |
  73 | //     test('Đăng nhập thất bại khi không nhập mật khẩu', async ({ baseTest }) => {
  74 | //         const { pageFactory } = baseTest;
  75 |
  76 | //         // Lấy LoginPage từ PageFactory
  77 | //         const loginPage = pageFactory.getPage('login');
  78 |
  79 | //         // Đăng nhập với mật khẩu trống
  80 | //         await loginPage.login(TestData.Users.StandardUser.username, '');
  81 |
  82 | //         // Kiểm tra thông báo lỗi hiển thị
  83 | //         expect(await loginPage.isErrorMessageVisible()).toBeTruthy();
  84 |
  85 | //         // Kiểm tra nội dung thông báo lỗi
  86 | //         const errorMessage = await loginPage.getErrorMessage();
  87 | //         expect(errorMessage).toContain(TestData.ErrorMessages.EmptyPassword);
  88 | //     });
  89 |
```